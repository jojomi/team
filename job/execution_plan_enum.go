// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package job

import (
	"fmt"
)

const (
	// ExecutionPlanSkip is a ExecutionPlan of type Skip.
	ExecutionPlanSkip ExecutionPlan = iota
	// ExecutionPlanLogDone is a ExecutionPlan of type LogDone.
	ExecutionPlanLogDone
	// ExecutionPlanExecute is a ExecutionPlan of type Execute.
	ExecutionPlanExecute
)

const _ExecutionPlanName = "skiplogDoneexecute"

var _ExecutionPlanMap = map[ExecutionPlan]string{
	ExecutionPlanSkip:    _ExecutionPlanName[0:4],
	ExecutionPlanLogDone: _ExecutionPlanName[4:11],
	ExecutionPlanExecute: _ExecutionPlanName[11:18],
}

// String implements the Stringer interface.
func (x ExecutionPlan) String() string {
	if str, ok := _ExecutionPlanMap[x]; ok {
		return str
	}
	return fmt.Sprintf("ExecutionPlan(%d)", x)
}

var _ExecutionPlanValue = map[string]ExecutionPlan{
	_ExecutionPlanName[0:4]:   ExecutionPlanSkip,
	_ExecutionPlanName[4:11]:  ExecutionPlanLogDone,
	_ExecutionPlanName[11:18]: ExecutionPlanExecute,
}

// ParseExecutionPlan attempts to convert a string to a ExecutionPlan
func ParseExecutionPlan(name string) (ExecutionPlan, error) {
	if x, ok := _ExecutionPlanValue[name]; ok {
		return x, nil
	}
	return ExecutionPlan(0), fmt.Errorf("%s is not a valid ExecutionPlan", name)
}
